require './lib/managers/game_teams_manager.rb'
# TeamStatistics knows about multiple teams
class TeamStatistics
  attr_reader :manager

  def initialize(team_manager)
    @team_manager = team_manager
  end

# return a hash of all team attributes except for stadium
  def team_info(team_id)
    hash = {}
    @team_manager.data.select do |team|
      if team.team_id == team_id
      # require "pry"; binding.pry
        hash[:team_id] = team.team_id
        hash[:franchise_id] = team.franchise_id
        hash[:team_name] = team.team_name
        hash[:abbreviation] = team.abbreviation
        hash[:link] = team.link
      end
    end
    return hash
  end

# team_win_percentage requires a GameTeamManager to access game_teams data
# returns the win percentage for a team. Doesn't care about seasons
  def win_percentage(team_id)
    # matches = [] (assuming the enumerable doesn't return an array)
# iterate through all game_team objects that GameTeamManager returns
    # game_teams.each do |game_team|
    #   if team_id == game_team.team_id
    #     matches << game_team
    #   end
    # total_games = matches.count
# to find wins
    # now iterate through all game_team objects in id_match
    # wins = matches.map do |game_team|
    #     game_team.result == "WIN"
    #   end.count
    # percentage = wins / total_games
    # return percentage
  end

  # game_teams contains team_id attribute
  # how getting from game_teams to games.season to pick out season with win percentage given team_id argument?
  # iterate through all game_teams to pick out ones that match team_id argument
    # matches = []
      # @game_teams.find_all do |game_team|
      #   game_team.team_id == team_id
        #  matches << game_team

  # I also want to access the game objects generated by GameManager
    # iterate through array of game objects returned from GameManager
    # games.map do |game|
    #   game.game_id == game_team.game_id
  #


# returns season with lowest win percentage for a team
  def best_season(team_id)
#  starts with game_team_object.team_id == team_id argument
#  will return game_object.season at the end
  end

# returns season with lowest win percentage for a team
  def worst_season(team_id)
#  starts with game_team_object.team_id == team_id argument
#  will return game_object.season at the end
  end

# returns average win percentage of all games for a team
# what is average win percentage vs win percentage?
  def average_win_percentage(team_id)
#  starts with game_team_object.team_id == team_id argument
  end

# Highest number of goals a team has scored in a single game.
  def most_goals_scored

  end
# Lowest numer of goals a team has scored in a single game.
  def fewest_goals_scored

  end

# Name of opponent that has the lowest win percentage against the given team.
  def favorite_opponent
# returns team.name
  end

  # Name of opponent that has the highest win percentage against the given team.
  def rival

  end
end
